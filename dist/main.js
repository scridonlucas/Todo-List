(()=>{"use strict";class e{constructor(e){this.name=e,this.tasks=[]}setName(e){this.name=e}getName(){return this.name}setTask(e){this.tasks.push(e)}setTasks(e){this.tasks=e}getTasks(){return this.tasks}}function t(){document.querySelector(".second-buttons").querySelectorAll("div").forEach((e=>e.remove()));for(let e=0;e<localStorage.length;e++)n(localStorage.key(e));!function(){let e=document.querySelector(".second-buttons"),t=document.createElement("div"),n=document.createElement("img"),d=document.createElement("p");d.textContent="Add new project",n.src="images/add-project.png",t.classList.add("button"),t.classList.add("add-project"),t.appendChild(n),t.appendChild(d),e.appendChild(t)}(),document.querySelector(".add-project").addEventListener("click",d)}function n(e){let t=document.querySelector(".second-buttons"),n=document.createElement("div"),d=document.createElement("img"),c=document.createElement("p");c.textContent=`${e}`,d.src="images/project.png",n.classList.add("button"),n.appendChild(d),n.appendChild(c),t.appendChild(n)}function d(){const n=document.querySelector(".second-buttons"),d=document.querySelector(".add-project"),c=document.createElement("div"),a=document.createElement("input"),s=document.createElement("div"),o=document.createElement("button"),r=document.createElement("button");d.remove(),a.classList.add("project-input"),c.classList.add("add-project-container"),s.classList.add("add-cancel"),o.classList.add("project-add-button"),r.classList.add("project-cancel-button"),a.setAttribute("type","text"),a.required=!0,o.textContent="Add",r.textContent="Cancel",s.appendChild(o),s.appendChild(r),n.appendChild(s),c.appendChild(a),c.appendChild(s),n.appendChild(c),o.addEventListener("click",(()=>{var n;n=a.value,function(e){let t=e.getName(),n=JSON.stringify(e);localStorage.setItem(`${t}`,n)}(new e(`${n}`)),t()})),r.addEventListener("click",(()=>{t()}))}t()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,